"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidMessageTypeError = void 0;
exports.getMyOappErrorFromCode = getMyOappErrorFromCode;
exports.getMyOappErrorFromName = getMyOappErrorFromName;
const umi_1 = require("@metaplex-foundation/umi");
const codeToErrorMap = new Map();
const nameToErrorMap = new Map();
/** InvalidMessageType */
class InvalidMessageTypeError extends umi_1.ProgramError {
    constructor(program, cause) {
        super('', program, cause);
        this.name = 'InvalidMessageType';
        this.code = 0x1770; // 6000
    }
}
exports.InvalidMessageTypeError = InvalidMessageTypeError;
codeToErrorMap.set(0x1770, InvalidMessageTypeError);
nameToErrorMap.set('InvalidMessageType', InvalidMessageTypeError);
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 */
function getMyOappErrorFromCode(code, program, cause) {
    const constructor = codeToErrorMap.get(code);
    return constructor ? new constructor(program, cause) : null;
}
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 */
function getMyOappErrorFromName(name, program, cause) {
    const constructor = nameToErrorMap.get(name);
    return constructor ? new constructor(program, cause) : null;
}
