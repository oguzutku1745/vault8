"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPeerConfigParamSerializer = getPeerConfigParamSerializer;
exports.peerConfigParam = peerConfigParam;
exports.isPeerConfigParam = isPeerConfigParam;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
function getPeerConfigParamSerializer() {
    return (0, serializers_1.dataEnum)([
        [
            'PeerAddress',
            (0, serializers_1.struct)([
                ['fields', (0, serializers_1.tuple)([(0, serializers_1.bytes)({ size: 32 })])],
            ]),
        ],
        [
            'EnforcedOptions',
            (0, serializers_1.struct)([
                ['send', (0, serializers_1.bytes)({ size: (0, serializers_1.u32)() })],
                ['sendAndCall', (0, serializers_1.bytes)({ size: (0, serializers_1.u32)() })],
            ]),
        ],
    ], { description: 'PeerConfigParam' });
}
function peerConfigParam(kind, data) {
    return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) };
}
function isPeerConfigParam(kind, value) {
    return value.__kind === kind;
}
